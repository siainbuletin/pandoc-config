#let content-to-string(content) = {
  if content.has("text") {
    content.text
  } else if content.has("children") {
    content.children.map(content-to-string).join("")
  } else if content.has("body") {
    content-to-string(content.body)
  } else if content == [ ] {
    " "
  }
}
#let conf(
  title: none,
  subtitle: none,
  authors: (),
  affiliations: (),
  keywords: (),
  date: none,
  abstract: none,
  cols: 1,
  margin: (x: 1.75cm, y: 2cm),
  paper: "a4",
  lang: "en",
  region: "GB",
  font: (),
  fontsize: 11pt,
  sectionnumbering: none,
  doc,
) = {
  set document(
    title: title,
    author: authors.map(author => content-to-string(author.name)),
    keywords: keywords,
  )
  set page(
    paper: paper,
    margin: margin,
    numbering: "1",
  )
  set par(justify: true)
  set text(lang: lang,
           region: region,
           font: font,
           size: fontsize)
  set heading(numbering: sectionnumbering)

  if title != none {
    align(center)[#block(inset: 2em)[
      #text(weight: "bold", size: 1.5em)[#title]
      #(if subtitle != none {
        parbreak()
        text(weight: "bold", size: 1.25em)[#subtitle]
      })
    ]]
  }

  if authors != none and authors != [] {
    let count = authors.len()
    let ncols = calc.min(count, 3)
    grid(
      columns: (1fr,) * ncols,
      row-gutter: 1.5em,
      column-gutter: 1.25em,
      ..authors.map(author =>
          align(center)[
            #strong[#emph[#author.name]]
            #if "affiliation" in author [
              \ #text(size: 0.7em)[#emph[#author.affiliation]]
            ]
            #if "email" in author [
              \ #text(size: 0.7em)[#underline[#author.email]]
            ]
          ]
      )
    )
  }

  if date != none {
    align(center)[#block(inset: 1em)[
      #date
    ]]
  }

  if affiliations.len() > 0 {
    set text(size: 9pt)
    block(width: 100%, stroke: none, inset: (top: 20pt, bottom: 20pt), {
      text(weight: "semibold", "Affiliations:")
      parbreak()
      affiliations.map(affiliation => {
        super(affiliation.id)
        h(1pt)
        affiliation.name 
        parbreak()
      }).join("")
    })
  }

  if abstract != none {
    block(inset: (left: 2em, right: 2em))[
    #text(weight: "semibold")[Abstract] #h(1em) #abstract
    ]
  }

  if (keywords.len() > 0) {
    text(size: 9pt, {
      h(2em)
      text(weight: "semibold", "Keywords")
      h(8pt)
      keywords.join(", ")
    })
  }
  v(10pt)

  if cols == 1 {
    doc
  } else {
    columns(cols, doc)
  }
}
